class t{static replaceRange(t,e,s,n){return t.substring(0,e)+n+t.substring(s)}}class e{constructor(){this.count=0,this.chars="abcdefghijklmnopqrstuvwxyz",this.cache=new Map}static get instance(){var t;return null!==(t=this._instance)&&void 0!==t?t:this._instance=new e}createName(t=this.count++){let e="",s=this.chars.length;for(;t>=0&&(e=this.chars[t%s]+e,t>0);)t=Math.floor(t/s)-1;return e}transform(t){var e;return null!==(e=this.cache[t])&&void 0!==e?e:this.cache[t]=this.createName()}CSSVariableOf(t){return this.cache[t]?`--${this.transform(t)}`:t}}class s{}class n extends s{transform(s){const n=s.matchAll(/--[\w-]+(?=\s*: ?.+;)/g);let a=0;for(const r of n){const n=r[0],c=r.index-a,o=e.instance.transform(n),l=t.replaceRange(s,c,c+n.length,`--${o}`);a+=s.length-l.length,s=l}return s}}class a{}class r extends a{transform(s){const n=s.matchAll(/(?<="|')--[\w-]+(?="|')/g),a=s.matchAll(/(?<=var\()[^()]*(?:\([^\)]*\)[^()]*)*(?=\))/g);let r=0;for(const a of n){const n=a[0],c=a.index-r,o=t.replaceRange(s,c,c+n.length,e.instance.CSSVariableOf(n));r+=s.length-o.length,s=o}for(const n of a){const a=n[0].matchAll(/--[\w-]+/g),c=n.index;for(const n of a){const a=n[0],o=c+n.index-r,l=t.replaceRange(s,o,o+a.length,e.instance.CSSVariableOf(a));r+=s.length-l.length,s=l,console.log("global: ",c),console.log("local",n.index)}}return s}}class c{constructor(t){var e,s;this.options=t,this.transpilers=[],(null===(s=null===(e=null==t?void 0:t.mangle)||void 0===e?void 0:e.staticVariable)||void 0===s||s)&&this.transpilers.push({declaration:new n,reference:new r})}apply(t){t.hooks.compilation.tap("CSSMangleWebpackPlugin",(e=>{e.hooks.processAssets.tap({name:"CSSMangleWebpackPlugin",stage:t.webpack.Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE},(s=>{for(const n in s)if(n.endsWith(".html")||n.endsWith(".js")||n.endsWith(".jsx")||n.endsWith(".css"))for(const a of this.transpilers){const r=s[n].source().toString(),c=a.declaration.transform(r),o=a.reference.transform(c);e.updateAsset(n,new t.webpack.sources.RawSource(o))}}))}))}}export{n as CSSVariableDeclaration,r as CSSVariableReference,e as Mangler,s as ManglerDeclaration,a as ManglerReference,c as default};
